<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nuc.admin.dao.IRentDao">
    <resultMap id="BaseResultMap" type="com.nuc.admin.domain.Rent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="rent_id" jdbcType="INTEGER" property="rentId"/>
        <result column="rent_price" jdbcType="DOUBLE" property="rentPrice"/>
        <result column="rent_start" jdbcType="VARCHAR" property="rentStart"/>
        <result column="rent_end" jdbcType="VARCHAR" property="rentEnd"/>
        <result column="rent_money" jdbcType="DOUBLE" property="rentMoney"/>
        <result column="room_id" jdbcType="INTEGER" property="roomId"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from rent
        where rent_id = #{rentId,jdbcType=INTEGER}
    </delete>

    <delete id="delRents" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from rent
        where rent_id in
        <foreach collection="array" item="ids" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>
    <insert id="insert" parameterType="com.nuc.admin.domain.Rent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into rent ( rent_price, rent_start,
        rent_end, rent_money, room_id
        )
        values (#{rentPrice,jdbcType=DOUBLE}, #{rentStart,jdbcType=VARCHAR},
        #{rentEnd,jdbcType=VARCHAR}, #{rentMoney,jdbcType=DOUBLE}, #{roomId,jdbcType=INTEGER}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.nuc.admin.domain.Rent">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update rent
        set rent_price = #{rentPrice,jdbcType=DOUBLE},
        rent_start = #{rentStart,jdbcType=VARCHAR},
        rent_end = #{rentEnd,jdbcType=VARCHAR},
        rent_money = #{rentMoney,jdbcType=DOUBLE},
        room_id = #{roomId,jdbcType=INTEGER}
        where rent_id = #{rentId,jdbcType=INTEGER}
    </update>
    <update id="updateRent" parameterType="com.nuc.admin.dao.IRentDao">
        UPDATE rent
        <set>
            <if test="rentPrice != null">
                rent_price = #{rentPrice},
            </if>
            <if test="rentStart!=null and rentStart!=''">
                rent_start = #{rentStart},
            </if>
            <if test="rentEnd!=null and rentEnd!=''">
                rent_end = #{rentEnd},
            </if>
            <if test="rentMoney != null">
                rent_money = #{rentMoney},
            </if>
            <if test="rentId != null">
                room_id = #{roomId}
            </if>
        </set>
        where rent_id = #{rentId}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select rent_id, rent_price, rent_start, rent_end, rent_money, room_id
        from rent
        where rent_id = #{rentId,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select rent_id, rent_price, rent_start, rent_end, rent_money, room_id
        from rent
    </select>


    <select id="getRent" resultMap="BaseResultMap">
        <![CDATA[
			SELECT a.*,r.room_no,u.user_id,u.real_name FROM rent a
			  join room r on a.room_id = r.room_id
			  join user u on r.room_id = u.room_id
		]]>
        <where>
            <if test="rentId!=0">
                rent_id = #{rentId}
            </if>
        </where>
    </select>

    <select id="listRents" resultMap="BaseResultMap">
        <![CDATA[
			SELECT * FROM (
			SELECT a.*,r.room_no,u.user_id,u.real_name FROM rent a
			  join room r on a.room_id = r.room_id
			  join user u on r.room_id = u.room_id
		]]>
        <where>
            <if test="rentId != null">
                <![CDATA[
				rent_id = #{rentId}
			]]>
            </if>
            <if test="user_id!=0">
                <![CDATA[
				and u.user_id = #{user_id}
			]]>
            </if>
            <if test="real_name!=null and real_name!=''">
                <![CDATA[
				and u.real_name like '%${real_name}%'
			]]>
            </if>
            <if test="roomId != null">
                <![CDATA[
				and a.room_id = #{roomId}
			]]>
            </if>
            <if test="room_no!=null and room_no!=''">
                <![CDATA[
				and r.room_no like '%${room_no}%'
			]]>
            </if>
        </where>
        <![CDATA[
			order by rent_id asc) t
		]]>
        <if test="start!=-1">
            <![CDATA[
			Limit ${start},${limit}
		]]>
        </if>
    </select>

    <select id="listRentsCount" resultType="int">
        <![CDATA[
			SELECT count(*) FROM rent a
			  join room r on a.room_id = r.room_id
			  join user u on r.room_id = u.room_id
		]]>
        <where>
            <if test="rentId != null">
                <![CDATA[
				rent_id = #{rentId}
			]]>
            </if>
            <if test="user_id!=0">
                <![CDATA[
				and u.user_id = #{user_id}
			]]>
            </if>
            <if test="real_name!=null and real_name!=''">
                <![CDATA[
				and u.real_name like '%${real_name}%'
			]]>
            </if>
            <if test="roomId != null">
                <![CDATA[
				and a.room_id = #{roomId}
			]]>
            </if>
            <if test="room_no!=null and room_no!=''">
                <![CDATA[
				and r.room_no like '%${room_no}%'
			]]>
            </if>
        </where>
    </select>

</mapper>